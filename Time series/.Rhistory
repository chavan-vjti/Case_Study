library(readxl)
import_values <- read_excel("D:/Siddhesh's Data/OpenCV Sentdex/Case_Study/Time series/import values.xlsx")
View(import_values)
plot(import_values)
data("AirPassengers")
class("AirPassengers")
library(tseries)
plot(import)
plot(import_values)
demo()
setwd("D:/Siddhesh's Data/OpenCV Sentdex/Case_Study/Time series")
#Read the CSV file in R object
import_values <- read.csv("import values.csv")
#Print first few observations
head(import_values)
attach(import_values)
import
#Review the summary of required data
summary(import)
version
#Review the summary of required data
summary(import)
#Plot the import values
plot(import)
#Augmented Dicky Fuller test for p-value
adf.test(import)
#Augmented Dicky Fuller test for p-value
adf.test(import, alternative = "stationary")
#Augmented Dicky Fuller test for p-value
adf.test(import, alternatively = "stationary")
#Augmented Dicky Fuller test for p-value
adf.test(import_values$import, alternatively = "stationary")
#Augmented Dicky Fuller test for p-value
adf.test(import_values$import, alternatively = "stationary")
#Augmented Dicky Fuller test for p-value
adf.test(import_values$import, alternatively = "stationary")
#Perform first order differencing to convert data to stationary
d.import <- diff(import)
plot(d.import)
summary(d.import)
#Augmented Dicky Fuller test for p-value
adf.test(d.import, alternatively = "stationary")
#Augmented Dicky Fuller test for p-value
adf.test(d.import, alternatively = "stationary")
#Set the working directory where CSV/data file is located
#Upload the required packages
library(forecast)
library(tseries)
#Set the working directory where CSV/data file is located
#Upload the required packages
library(forecast)
library(tseries)
#Read the CSV file in R object
import_values <- read.csv("import values.csv")
#Print first few observations
head(import_values)
attach(import_values)
#Review the summary of required data
summary(import)
#Plot the import values
plot(import)    #Non stationary data
#Augmented Dicky Fuller test for p-value
adf.test(import, alternatively = "stationary")
attach(import_values)
#Augmented Dicky Fuller test for p-value
adf.test(import, alternatively = "stationary")
#Perform first order differencing to convert data to stationary
d.import <- diff(import)
plot(d.import)
summary(d.import)
#Augmented Dicky Fuller test for p-value
adf.test(d.import, alternatively = "stationary")
#Augmented Dicky Fuller test for p-value
adf.test(d.import, alternative = "stationary")
#Set the working directory where CSV/data file is located
#Upload the required packages
library(forecast)
library(tseries)
#Read the CSV file in R object
import_values <- read.csv("import values.csv")
#Print first few observations
head(import_values)
attach(import_values)
#Review the summary of required data
summary(import)
#Plot the import values
plot(import)    #Non stationary data
#Augmented Dicky Fuller test for p-value
adf.test(import, alternative = "stationary")
#Augmented Dicky Fuller test for p-value
adf.test(import, alternative = "stationary")
#Lookf acf and pacf plots
acf(import)
pacf(import)
auto.arima(import)
#Perform first order differencing to convert data to stationary
d.import <- diff(import)
plot(d.import)
summary(d.import)
#Augmented Dicky Fuller test for p-value
adf.test(d.import, alternative = "stationary")
#Lookf acf and pacf plots
acf(d.import)
pacf(d.import)
auto.arima(d.import)
arima(import, order=(4,1,3)
arima(import, order=(4,1,3))
arima(import, order=(4,1,3))
arima(import, order=c(4,1,3))
#Store the result in an object
arima.final <- arima(d.import, order=c(4,0,3))
tsdiag(arima.final)
tsdiag(arima.final)
#Forecasting using final model
arima.final <- arima(import, order = c(4,1,3))
#Forecasting using final model
arima.final <- arima(import, order = c(4,1,3))
summary(arima.final)
predicted <- forecast(arima.final, h=2976)
View(predicted)
predicted <- forecast(arima.final, h=2976, level = c(80,95))
View(predicted)
acf(arima.final)
arima.final <- arima(import, order = c(4,1,3))
acf(arima.final)
predicted[["upper"]]
options(max.print = 100000)
predicted[["upper"]]
predicted<-predict(arima.final, n.head = 2976)
View(predicted)
predicted[["mean"]]
predicted[["mean"]]
predicted[["lower"]]
predicted[["lower"]]
predicted[["x"]]
predicted[["x"]]
predicted <- forecast(arima.final, h=2976, level = c(80,95))
View(predicted)
predicted[["mean"]]
predicted[["lower"]]
predicted[["upper"]]
write.csv(predicted,file = "Predicted Data")
write.csv(predicted,file = "Predicted Data.csv")
predicted <- forecast(arima.final, h=2976, level = c(90,95))
write.csv(predicted,file = "Predicted Data1.csv")
#Model application
arima(d.import, order=c(4,0,3))
